services:
  mongo:
    image: mongo:8.0.10
    container_name: mongodb
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: Projekt
    volumes:
      - ./mongo_data:/data/db
      - ./database:/docker-entrypoint-initdb.d:ro
    networks:
      - sleep_app
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - server/.env
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - sleep_app
    depends_on:
      mongo:
        condition: service_healthy
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sleep_app
    depends_on:
      - server
  mongo-express:
      image: mongo-express:1.0.0
      restart: always
      environment:
        ME_CONFIG_MONGODB_URL: "mongodb://admin:admin@mongo:27017/Projekt?authSource=admin"
        ME_CONFIG_BASICAUTH_USERNAME: admin
        ME_CONFIG_BASICAUTH_PASSWORD: docker
      ports:
        - "127.0.0.1:8081:8081"
      networks:
        - sleep_app
      depends_on:
        - mongo
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - sleep_app
    depends_on:
      - server
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000" 
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - sleep_app
    depends_on:
      - prometheus

volumes:
  mongo_data:
  grafana_data: 
  
networks:
  sleep_app:
    driver: bridge

